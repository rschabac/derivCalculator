# 1 "src/lexer.mll"
 
open Parser
exception Error of string

# 7 "src/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\233\255\234\255\235\255\075\000\087\000\029\000\238\255\
    \035\000\050\000\037\000\048\000\248\255\249\255\250\255\251\255\
    \252\255\114\000\254\255\002\000\036\000\052\000\044\000\247\255\
    \243\255\039\000\241\255\057\000\042\000\242\255\246\255\244\255\
    \049\000\245\255\069\000\240\255\239\255\237\255";
  Lexing.lex_backtrk =
   "\019\000\255\255\255\255\255\255\019\000\019\000\020\000\255\255\
    \020\000\020\000\020\000\020\000\255\255\255\255\255\255\255\255\
    \255\255\002\000\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\000\000\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\255\255\255\255\255\255\255\255\000\000\
    \000\000\255\255\000\000\255\255\255\255\000\000\000\000\000\000\
    \255\255\000\000\255\255\000\000\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\019\000\019\000\019\000\019\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \019\000\000\000\019\000\000\000\000\000\000\000\000\000\000\000\
    \013\000\012\000\016\000\018\000\000\000\017\000\004\000\015\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\000\000\000\000\014\000\000\000\
    \000\000\003\000\003\000\010\000\003\000\007\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\008\000\003\000\003\000\003\000\
    \006\000\003\000\003\000\011\000\009\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\037\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\035\000\034\000\032\000\028\000\021\000\025\000\024\000\
    \027\000\022\000\023\000\026\000\031\000\030\000\029\000\033\000\
    \004\000\020\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\036\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\019\000\019\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\019\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\255\255\000\000\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\005\000\006\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\008\000\008\000\009\000\010\000\011\000\020\000\021\000\
    \010\000\011\000\022\000\025\000\027\000\028\000\028\000\032\000\
    \017\000\011\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \017\000\017\000\017\000\017\000\034\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec read lexbuf =
   __ocaml_lex_read_rec lexbuf 0
and __ocaml_lex_read_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 13 "src/lexer.mll"
          ( read lexbuf )
# 144 "src/lexer.ml"

  | 1 ->
# 14 "src/lexer.mll"
        ( PLUS )
# 149 "src/lexer.ml"

  | 2 ->
# 15 "src/lexer.mll"
        ( MINUS )
# 154 "src/lexer.ml"

  | 3 ->
# 16 "src/lexer.mll"
        ( TIMES )
# 159 "src/lexer.ml"

  | 4 ->
# 17 "src/lexer.mll"
        ( DIVIDE )
# 164 "src/lexer.ml"

  | 5 ->
# 18 "src/lexer.mll"
        ( CARET )
# 169 "src/lexer.ml"

  | 6 ->
# 19 "src/lexer.mll"
        ( LPAREN )
# 174 "src/lexer.ml"

  | 7 ->
# 20 "src/lexer.mll"
        ( RPAREN )
# 179 "src/lexer.ml"

  | 8 ->
# 21 "src/lexer.mll"
          ( SIN )
# 184 "src/lexer.ml"

  | 9 ->
# 22 "src/lexer.mll"
          ( COS )
# 189 "src/lexer.ml"

  | 10 ->
# 23 "src/lexer.mll"
          ( TAN )
# 194 "src/lexer.ml"

  | 11 ->
# 24 "src/lexer.mll"
          ( CSC )
# 199 "src/lexer.ml"

  | 12 ->
# 25 "src/lexer.mll"
          ( SEC )
# 204 "src/lexer.ml"

  | 13 ->
# 26 "src/lexer.mll"
          ( COT )
# 209 "src/lexer.ml"

  | 14 ->
# 27 "src/lexer.mll"
          ( SQRT )
# 214 "src/lexer.ml"

  | 15 ->
# 28 "src/lexer.mll"
         ( LN )
# 219 "src/lexer.ml"

  | 16 ->
# 29 "src/lexer.mll"
          ( LOG10 )
# 224 "src/lexer.ml"

  | 17 ->
# 30 "src/lexer.mll"
        ( REAL (exp 1.0) )
# 229 "src/lexer.ml"

  | 18 ->
# 31 "src/lexer.mll"
         ( REAL (atan2 0.0 (-1.0)) )
# 234 "src/lexer.ml"

  | 19 ->
# 32 "src/lexer.mll"
           ( REAL (float_of_string (Lexing.lexeme lexbuf)) )
# 239 "src/lexer.ml"

  | 20 ->
# 33 "src/lexer.mll"
          ( VAR (
					(* verify that the lexeme is only one char *)
					let rawStr = Lexing.lexeme lexbuf in
					let len = String.length rawStr in
					if len = 0 then
						(*this should not happen*)
						raise (Error "At offset %d: variable has length 0")
					else
					if len <> 1 then
						raise (Error (Printf.sprintf
							"Variable '%s' is more than one letter." rawStr))
						else String.get rawStr 0
					) )
# 256 "src/lexer.ml"

  | 21 ->
# 46 "src/lexer.mll"
        ( EOF )
# 261 "src/lexer.ml"

  | 22 ->
# 47 "src/lexer.mll"
       ( raise (Error (Printf.sprintf "At offset %d: unexpected character." (Lexing.lexeme_start lexbuf))) )
# 266 "src/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_read_rec lexbuf __ocaml_lex_state

;;

